
@{
    ViewBag.Title = "Analytics API";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .loader {
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border: 16px solid red;
        padding-top: 10%;
        width: 200px;
        height: 200px;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
    }
</style>
<script src="https://apis.google.com/js/platform.js" async defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js" type="text/javascript"></script>
    <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="https://apis.google.com/js/api.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
    <script>
        googleApiClientReady = function () {
            setInitialDates();
            gapi.auth.init(function () {
                window.setTimeout(checkAuth, 1);
            });
        }

        
        function checkAuth() {
            handleAuthResult();
        }

        function handleAuthResult() {
            loadAPIClientInterfaces();
        }

        function loadAPIClientInterfaces() {
            gapi.client.load("https://youtubeanalytics.googleapis.com/$discovery/rest?version=v2")
                .then(function () { console.log("GAPI client loaded for API"); 
                    handleAPILoaded(); },
                    function (err) { console.error("Error loading GAPI client for API", err); });
        }

        var token = @Html.Raw(Json.Encode(ViewBag.Token));
        function handleAPILoaded() {
            //alert(token);
            gapi.client.setToken({ access_token: token });
            getDataFromAPI();
        }

        function execute(startDate, endDate, channelList) {
            return gapi.client.youtubeAnalytics.reports.query({
            "currency": "USD",
            "dimensions": "day",
            "endDate": endDate,
            "filters": "channel==" + channelList,
            "ids": "contentOwner==cwoucXAu09H80RrnqGyO9w",
            "metrics": "estimatedRevenue,estimatedMinutesWatched,views,subscribersGained,comments,likes",
            "startDate": startDate,
            "startIndex": "1"
        })
            .then(function (response) {
            // Handle the results here (response.result has the parsed body).
                console.log("Response", response.result);
                var date = [];
                var earnings = [];
                $.each(response.result.rows, function (i, item) {
                    date.push(item[0]);
                    earnings.push(item[1]);
                });
                estimatedEarningChart(date, earnings);
                execute1(startDate, endDate, channelList);
         },
            function (err) {console.error("Execute error", err); });
         }

        function execute1(startDate, endDate, channelList) {
            return gapi.client.youtubeAnalytics.reports.query({
                "currency": "USD",
                "dimensions": "channel",
                "endDate": endDate,
                "filters": "channel==" + channelList,
                "ids": "contentOwner==cwoucXAu09H80RrnqGyO9w",
                "metrics": "estimatedRevenue,estimatedMinutesWatched,views,subscribersGained,comments,likes",
                "startDate": startDate,
                "startIndex": "1"
            })
                .then(function (response) {
                    // Handle the results here (response.result has the parsed body).
                    console.log("Response", response.result);
                    var channelID = [];
                    var earnings = [];
                    var watchedTime = [];
                    var views = [];
                    var subGained = [];
                    var comments = [];
                    var likes = [];
                    $.each(response.result.rows, function (i, item) {
                        channelID.push(item[0]);
                        earnings.push(item[1]);
                        watchedTime.push(item[2]);
                        views.push(item[3]);
                        subGained.push(item[4]);
                        comments.push(item[5]);
                        likes.push(item[6]);
                    });
                    plotChannelList(channelID, earnings, watchedTime, views, subGained, comments, likes);
                },
                    function (err) { console.error("Execute error", err); });
        }

        function setInitialDates() {
            var now = new Date();
            var day = ("0" + now.getDate()).slice(-2);
            var month = ("0" + (now.getMonth() + 1)).slice(-2);
            var today = now.getFullYear() + "-" + (month) + "-" + (day);
            $('#endDate').val(today);

            now.setDate(now.getDate() - 20);
            day = ("0" + now.getDate()).slice(-2);
            month = ("0" + (now.getMonth() + 1)).slice(-2);
            today = now.getFullYear() + "-" + (month) + "-" + (day);
            $('#startDate').val(today);

            document.getElementById("startDate").setAttribute("max", new Date().toISOString().split("T")[0]);
            document.getElementById("endDate").setAttribute("max", new Date().toISOString().split("T")[0]);
            document.getElementById("endDate").setAttribute("min", today);
        }
        function setDates() {
            document.getElementById("endDate").setAttribute("min", document.getElementById("startDate").value);
        }

        var channelNamesList = [];
        var channelList = [];
        var startDate = null;
        var endDate = null;
        function getDataFromAPI() {
            var start = new Date(document.getElementById("startDate").value);
            var end = new Date(document.getElementById("endDate").value);
            startDate = start.getFullYear() + "-" + ("0" + (start.getMonth() + 1)).slice(-2) + "-" + ("0" + start.getDate()).slice(-2);
            endDate = end.getFullYear() + "-" + ("0" + (end.getMonth() + 1)).slice(-2) + "-" + ("0" + end.getDate()).slice(-2);

            var jsList = @Html.Raw(Json.Encode(ViewBag.Channels));
            var jsList1 = @Html.Raw(Json.Encode(ViewBag.ChannelsName));
            
            $.each(jsList, function (value) {
                if (jsList[value].length == 24) {
                    channelList.push(jsList[value]);
                    channelNamesList.push(jsList1[value]);
                }
            })
            execute(startDate, endDate, channelList);
        }

        function estimatedEarningChart(dates, estimatedEarnings) {
            $('#totalEarnings').text("$" + Math.round(estimatedEarnings.reduce((a, b) => a + b, 0) * 100) / 100);
            $('#myChartNEW').remove();
            $('#chartFirst').append('<canvas id="myChartNEW" height="80"> </canvas>');
            var ctx = $("#myChartNEW").get(0).getContext("2d");
            var myNewChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [
                        {
                            label: "Estimated Earnings",
                            borderColor: "#ff0c00", 
                            backgroundColor: "#f95f59",
                            data: estimatedEarnings
                        }
                    ]
                },
                options: {
                    responsive: true,
                    title: { display: true, text: '' },
                    legend: { position: 'bottom' },
                    scales: {
                        xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }],
                        yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }]
                    },
                }
            });
        }

        function plotChannelList(channelID, earnings, watchedTime, views, subGained, comments, likes) {
            $(".UserChannelsList").empty();
            for (i = 0; i < channelID.length; i++) {
                $(".UserChannelsList").append(`
                <div class="col-lg-12" style="margin-bottom:40px;">
                    <div class="row">
                        <div class="col-lg-1" style="margin-left:5%; margin-top:2%;">
                            <div style="width=100%;">
                                <img style="float:right;" src="https://tpdigital.blob.core.windows.net/logo/youtube.png" alt="" width="70" height="70">
                            </div>
                        </div>
                        <div class="col-lg-2" style="margin-top:3%; float: left;">
                            <div class="col-lg-12">
                                <a href='@Url.Action("AnalyticsEntChannelDetails", "YoutubeEntAnalytics")?channelID=${channelID[i]}&name=${channelNamesList[channelList.indexOf(channelID[i])]}' })}'><h6 style="float:left;"><b>${channelNamesList[channelList.indexOf(channelID[i])]}</b></h6></a><br />
                                <h6 style="float:left;">Youtube Channel</h6>
                            </div>
                        </div>
                        <div class="col-lg-2" style="margin-top:1%; float: left;">
                            <div class="col-lg-12">
                                <h6 style="float:left;"><b>${views[i]}</b></h6><br />
                                <h6 style="float:left;">Views</h6><br /><br />
                                <h6 style="float:left;"><b>${watchedTime[i]}</b></h6><br />
                                <h6 style="float:left;">Estimated Min. Watched</h6>
                            </div>
                        </div>
                        <div class="col-lg-2" style="margin-top:1%; float: left;">
                            <div class="col-lg-12">
                                <h6 style="float:left;"><b>${likes[i]}</b></h6><br />
                                <h6 style="float:left;">Likes</h6><br /><br />
                                <h6 style="float:left;"><b>${comments[i]}</b></h6><br />
                                <h6 style="float:left;">Comments</h6>
                            </div>
                        </div>
                        <div class="col-lg-3" style="margin-top:1%; float: left;">
                            <div class="col-lg-12">
                                <h6 style="float:left;"><b>${subGained[i]}</b></h6><br />
                                <h6 style="float:left;">Subcribers Gained</h6><br /><br />
                                <h6 style="float:left;"><b>$${Math.round(earnings[i] * 100) / 100}</b></h6><br />
                                <h6 style="float:left;">Estimated Revenue</h6>
                            </div>
                        </div>
                    </div>
                </div>
            `);
            }
        }
    </script>
    <script src="https://apis.google.com/js/client.js?onload=googleApiClientReady"></script>
<div class="main-panel">
    <div class="main-content">
        <div class="content-wrapper">
            @if (ViewBag.EntChannelCount > 0)
            {
                <div class="row">
                    <div class="col-lg-12">
                        <center>
                            <label style="font-size:30px; margin-bottom: 30px;">
                                <p style="font-size:30px; font-weight:bold"> User' Entertainment Channels Panel</p><br />
                            </label>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-3">
                        </div>
                        <div class="col-sm-3">
                            <center>Start Date</center>
                            <input id="startDate" onblur="setDates()" class="form-control" type='date' />
                        </div>
                        <div class="col-sm-3">
                            <center>End Date</center>
                            <input id="endDate" class="form-control" type='date' />
                        </div>
                        <div class="col-sm-3">

                        </div>
                    </div>
                    <div class="col-lg-12">
                        <center>
                            <button onclick="getDataFromAPI()" style="width:30%;" class="btn btn-danger">Get Data</button>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-2">
                        <div class="col-lg-12">
                            <h5><b>Estimated Earnings</b></h5>
                        </div>
                        <div class="col-lg-12">
                            <center><label id="totalEarnings" style="margin-top:50px; font-family:'Century Gothic'; font-size:30px;" title="Total Earnings">Total</label></center>
                        </div>
                    </div>
                    <div class="col-lg-10">
                        <div id="chartFirst">
                            <canvas id="myChartNEW" height="80"> </canvas>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <h5><b>Your Channels</b></h5>
                </div>

                <div class="col-lg-12 UserChannelsList">

                </div>
            }
            else
            {
                @Html.Partial("_NoEntChannelPartial")
            }
        </div>
    </div>
</div>

